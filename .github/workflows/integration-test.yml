name: integration testing api
on:
    push:
        branches: [ "main" ]
    pull_request:
        branches: [ "main" ]

jobs:
    api-test:
        runs-on: ubuntu-latest
        env:
            PG_USER: ${{ secrets.POSTGRES_USER }}
            PG_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        strategy:
            matrix:
                node-version: [20.x]
        # services:
        #     postgres:
        #         image: postgres
        #         env:
        #             POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        #             POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        #             POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        #         ports:
        #             - 5432:5432
        #         options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        steps:
            - uses: actions/checkout@v2

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            
            - name: Install PostgreSQL and related packages
              run: |
                    sudo apt-get update
                    sudo apt-get install -y postgresql postgresql-contrib
                    sudo systemctl start postgresql
                    sudo systemctl enable postgresql

            - name: Create PostgreSQL user and database
              run: |
                sudo -u postgres psql -c "CREATE USER $PG_USER WITH PASSWORD '$PG_PASSWORD';" 2>/dev/null
                sudo -u postgres psql -c "CREATE DATABASE $PG_USER OWNER $PG_USER;" 2>/dev/null
                sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE $PG_USER TO $PG_USER;" 2>/dev/null


            # - name: Update pg_hba.conf to use password authentication
            #   run: |
            #     sudo sed -i "s/ident/md5/g" /etc/postgresql/<version>/main/pg_hba.conf


            - name: Install Dependencies
              run: npm ci

            - name: API testing
              run: npm test
              env:
                  USER: ${{ secrets.POSTGRES_USER }}
                  HOST: ${{ secrets.POSTGRES_HOST }}
                  DATABASE: ${{ secrets.POSTGRES_DB }}
                  PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
                  PORT: ${{ secrets.POSTGRES_DB_PORT }}
                  DATABASE_SYS: ${{ secrets.POSTGRES_DB_DIALECT }}
                  SERVER_PORT: ${{ secrets.NODE_APP_PORT }}
