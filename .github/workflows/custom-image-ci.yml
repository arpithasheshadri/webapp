# on:
#   pull_request:
#     types: [ closed ]
on:
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Zip application code
      run: |
        # Change directory to the root of the repository
        cd .

        # Zip the entire repository
        zip -r webapp.zip .

    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0.4.0'
      with: 
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Install Packer
      run: |
            curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
            sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
            sudo apt-get update && sudo apt-get install packer

    - name: Initiate Packer template
      run: packer init .

    - name: Validate Packer template
      run: packer validate -var-file="variables.pkrvars.hcl" .

    # - name: Build Packer template
    #   run: packer build -var-file="variables.pkrvars.hcl" .

    - name: Get Latest Image from GCP Console
      id: get_image
      run: |
        echo "image_name=$(gcloud compute images list --project cloud-gcp-tf --filter='name:centos-stream-8-*' --sort-by=~creationTimestamp --limit=1 --format='value(name)')" >> $GITHUB_OUTPUT
    
    - name: Get secrets from GCP secret manager
      id: secrets
      uses: 'google-github-actions/get-secretmanager-secrets@v2'
      with:
        secrets: |-
            token:cloud-gcp-tf/webapp_secret
      

    - name: Create Instance Template
      run: |
        echo ${{ steps.secrets.outputs.token }}
        gcloud compute instance-templates create instance-template-5 \
        --instance-template-region=us-east1 \
        --project=cloud-gcp-tf \
        --machine-type=e2-medium \
        --network-interface=network-tier=PREMIUM,stack-type=IPV4_ONLY,subnet=https://www.googleapis.com/compute/v1/projects/cloud-gcp-tf/regions/us-east1/subnetworks/webapp \
        --metadata=startup-script="#!/bin/bash
        # Split the secrets string into individual lines
        IFS=$'\n' read -rd '' -a secrets_array <<< "${{ steps.secrets.outputs.token }}"

        # Loop through each line of the secrets array and extract key-value pairs
        for secret_line in "${secrets_array[@]}"; do
          # Extract the key and value using awk
          key=$(echo "$secret_line" | awk -F= '{print $1}')
          value=$(echo "$secret_line" | awk -F= '{print $2}')

          # Write the key-value pair to the environment file
          echo "$key=$value" >> /opt/webapp/development.env
        done \
        --service-account=webapp-account@cloud-gcp-tf.iam.gserviceaccount.com \
        --scopes=https://www.googleapis.com/auth/cloud-platform \
        --create-disk=auto-delete=yes,boot=yes,device-name=disk-1,image=projects/cloud-gcp-tf/global/images/${{ steps.get_image.outputs.image_name }},kms-key=projects/cloud-gcp-tf/locations/us-east1/keyRings/cloud-key-ring-three/cryptoKeys/crypto-key-vms-three,mode=rw,size=50,type=pd-balanced \
        --tags=http-server 
      env:
          TOKEN: '${{ steps.secrets.outputs.token }}'

    - name: Configure Instance Groups
      run: |
        gcloud compute instance-groups managed rolling-action start-update webapp-group-manager \
        --version=template=https://compute.googleapis.com/compute/v1/projects/cloud-gcp-tf/regions/us-east1/instanceTemplates/instance-template-5 \
        --max-surge=3 \
        --max-unavailable=3 \
        --region=us-east1
        
    - name: Monitoring the instances
      run: |
        gcloud compute instance-groups managed wait-until webapp-group-manager \
        --version-target-reached \
        --region=us-east1

    